document.addEventListener('DOMContentLoaded', () => {
    // --- Configuration ---
    const correctPassword = '王昭阳';
    const storageKey = 'auth_data';
    const validityDays = 7;
    const securityKey = 'mbs_security_hash';

    // --- Security Check ---
    function generateSecurityHash(str) {
        let hash = 0;
        for (let i = 0; i < str.length; i++) {
            const char = str.charCodeAt(i);
            hash = ((hash << 5) - hash) + char;
            hash = hash & hash;
        }
        return hash.toString(36);
    }

    function verifyCodeIntegrity() {
        const expectedHash = generateSecurityHash(correctPassword + "wzy");
        const storedHash = localStorage.getItem(securityKey);
        
        if (!storedHash) {
            localStorage.setItem(securityKey, expectedHash);
            return true;
        }
        
        if (storedHash !== expectedHash) {
            // 代码被修改，执行保护措施
            document.body.innerHTML = '';
            document.body.style.backgroundColor = '#fff';
            localStorage.clear();
            return false;
        }
        
        return true;
    }

    // --- Helper Functions ---
    function setAuthData() {
        if (!verifyCodeIntegrity()) return;
        
        const expiration = new Date();
        expiration.setDate(expiration.getDate() + validityDays);
        const authData = {
            isAuthenticated: true,
            expiresAt: expiration.getTime()
        };
        localStorage.setItem(storageKey, JSON.stringify(authData));
    }

    function getAuthData() {
        if (!verifyCodeIntegrity()) return null;
        
        const authDataString = localStorage.getItem(storageKey);
        if (!authDataString) {
            return null;
        }
        const authData = JSON.parse(authDataString);
        // Check for expiration
        if (new Date().getTime() > authData.expiresAt) {
            localStorage.removeItem(storageKey); // Clean up expired data
            return null;
        }
        return authData;
    }

    function showContent() {
        if (!verifyCodeIntegrity()) return;
        
        const protectedContent = document.getElementById('protected-content');
        if (protectedContent) {
            protectedContent.style.visibility = 'visible';
        }
    }

    // --- Main Logic ---
    if (!verifyCodeIntegrity()) return;
    
    if (getAuthData()) {
        showContent();
        return;
    }

    // --- Create and Inject Password Modal ---
    const modalHTML = `
        <div id="password-overlay" style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.7); display: flex; justify-content: center; align-items: center; z-index: 1000;">
            <div id="password-modal" style="background-color: white; padding: 40px; border-radius: 8px; box-shadow: 0 5px 15px rgba(0,0,0,0.3); text-align: center; opacity: 0; transform: scale(0.9); transition: opacity 0.3s ease-out, transform 0.3s ease-out;">
                <h2>请输入访问密码</h2>
                <div>
                    <input type="text" id="password-input" placeholder="请输入密码" style="font-size: 1.1em; padding: 10px; border-radius: 4px; border: 1px solid #ccc; margin-right: 10px;">
                    <button id="password-btn" style="font-size: 1.1em; padding: 10px 20px; border-radius: 4px; border: none; background-color: #007bff; color: white; cursor: pointer;">进入</button>
                </div>
                <div id="password-error" style="color: #dc3545; margin-top: 15px; height: 1.2em;"></div>
            </div>
        </div>
    `;
    document.body.insertAdjacentHTML('beforeend', modalHTML);

    // --- Get Modal Elements ---
    const overlay = document.getElementById('password-overlay');
    const passwordModal = document.getElementById('password-modal');
    const passwordInput = document.getElementById('password-input');
    const passwordBtn = document.getElementById('password-btn');
    const passwordError = document.getElementById('password-error');

    // Make modal visible with animation
    setTimeout(() => {
        if(passwordModal) {
            passwordModal.style.opacity = '1';
            passwordModal.style.transform = 'scale(1)';
        }
    }, 100);

    // --- Event Handlers ---
    function checkPassword() {
        if (!verifyCodeIntegrity()) return;
        
        if (passwordInput.value === correctPassword) {
            setAuthData();
            if (overlay) {
                overlay.style.display = 'none';
            }
            showContent();
        } else {
            passwordError.textContent = '密码错误，请重试。';
            passwordInput.value = '';
            passwordInput.focus();
        }
    }
    
    if(passwordBtn) {
        passwordBtn.addEventListener('click', checkPassword);
    }
    if(passwordInput) {
        passwordInput.addEventListener('keydown', (e) => {
            if (e.key === 'Enter') {
                checkPassword();
            }
        });
    }
}); 